name: Build and Deploy back-end
on:
  push:
    #branches: [main]
  #pull_request:
    #branches: [main]
jobs:
  build:
    name: Run back-end
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v2.4.0
      - name: Instalar Node
        uses: actions/setup-node@v1 
        with:
          node-version: '14.18.1'
      - name: Instalar dependencias
        run: npm install       
      - name: test
        run: npm run test
env:
  REGISTRY: "registry.digitalocean.com/podbuster"
  IMAGE_NAME: "podcast-library-backend_web"
  
  build-docker:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build container image
      run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

    - name: Change name to latest for push
      run: docker tag $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}

          script: |
            cd podcast-library-backend
            docker pull registry.digitalocean.com/podcast-library-backend:latest
            echo 'Deployment successfully to digital ocean'
            
      